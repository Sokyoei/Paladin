# This file is Sokyoei's personal configuration for Python project.

[build-system]
# requires = ["setuptools", "wheel"]
# build-backend = "setuptools.build_meta"

# On Win11 conda virtualenv, `virtualenv` package has a BUG, not find ssl module(copy Library\bin libcryoto-* and
# libssl-* into DLLs can resolve), hatch require it, waiting to fix.

requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "Paladin"
version = "0.0.1"
authors = [{ name = "Sokyoei" }]
license = { text = "MIT" }
readme = "README.md"
dependencies = [
    # data analysis
    "numpy",      # https://github.com/numpy/numpy
    "scipy",      # https://github.com/scipy/scipy
    "pandas",     # https://github.com/pandas-dev/pandas
    "matplotlib", # https://github.com/matplotlib/matplotlib
    "PyYAML",     # https://github.com/yaml/pyyaml
    "loguru",     # https://github.com/Delgan/loguru
]
requires-python = ">= 3.8"

[project.urls]
Repository = "https://github.com/Sokyoei/Paladin"

[project.optional-dependencies]
# Sokyoei know and learn library
dev = [
    "ruff",       # https://github.com/astral-sh/ruff
    "black",      # https://github.com/psf/black
    "isort",      # https://github.com/PyCQA/isort
    "pipdeptree", # https://github.com/tox-dev/pipdeptree
    "viztracer",  # https://github.com/gaogaotiantian/viztracer
    # "pip_search", # https://github.com/victorgarric/pip_search
    # "autopep8",   # https://github.com/hhatto/autopep8
]
utils = [
    "python-dateutil", # https://github.com/dateutil/dateutil
]
test = ["pytest", "tox", "coverage"]
build = [
    "setuptools",
    "wheel",
    "hatch",      # https://github.com/pypa/hatch
]
ai = [
    # python3.9 + cuda11.6
    "torch==1.13.1+cu116; python_version=='3.9'",
    "torchvision==0.14.1+cu116; python_version=='3.9'",
    "torchaudio==0.13.1; python_version=='3.9'",
]
geography = [
    "wrf-python", # https://github.com/NCAR/wrf-python
    "eccodes",    # https://github.com/ecmwf/eccodes-python
    "ecmwflibs",  # https://github.com/ecmwf/ecmwflibs
    "f90nml",     # https://github.com/marshallward/f90nml
    "cdsapi",     # https://github.com/ecmwf/cdsapi
    "netCDF4",    # https://github.com/Unidata/netcdf4-python
    "xarray",     # https://github.com/pydata/xarray
    "cfgrib",     # https://github.com/ecmwf/cfgrib
    "Cartopy",    # https://github.com/SciTools/cartopy
    "geopandas",  # https://github.com/geopandas/geopandas
    "pyshp",      # https://github.com/GeospatialPython/pyshp
    "pyproj",     # https://github.com/pyproj4/pyproj
]
sumo = [
    # https://github.com/eclipse-sumo/sumo
    "eclipse-sumo",
    "libsumo",
    "libtraci",
    "sumolib",
    "traci",
]
web = ["flask[async]", "fastapi[all]"]
webapp = ["streamlit", "gradio"]
gui = ["PyQt5"]
cli = ["click"]
llm = []
fastapi_learn = ["fastapi[all]", "sqlalchemy[aiomysql]", "redis"]
django_learn = ["django"]

[project.scripts]

[project.gui-scripts]

[tool.rye]
dev-dependencies = []

[[tool.rye.sources]]
name = "default"
url = "https://pypi.org/simple/"

[[tool.rye.sources]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cpu"

[[tool.rye.sources]]
name = "nvidia"
url = "https://pypi.nvidia.cn/"

[tool.rye.workspace]
members = ["Paladin"]

[tool.setuptools]
include-package-data = true

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.sdist]
ignore-vcs = true
packages = ["./data", "./docs", "./python", "./tests"]
include = []
exclude = ["/.vscode"]

[tool.hatch.build.targets.wheel]
ignore-vcs = true
packages = ["./data", "./docs", "./python", "./tests"]
include = []
exclude = []

[tool.hatch.build.targets.wheel.hooks.custom]
path = "hatch_build.py"

[tool.isort]
line_length = 120
multi_line_output = 0

[tool.black]
line-length = 120
preview = true
skip-string-normalization = true
skip-magic-trailing-comma = true

[tool.autopep8]
max_line_length = 120

[tool.ruff]
line-length = 120
select = [
    "F",   # pyflakes
    "E",   # pycodestyle error
    "W",   # pycodestyle warning
    "C90", # mccabe
    "I",   # isort
    # "N",   # pep8-naming
    # "D",   # pydocstyle
    "PD",  # pandas-vet
    "NPY", # numpy specific rules
    "RUF", # ruff specific rules
]
ignore = [
    "E501",   # line too long
    "RUF002", # ambiguous-unicode-character-docstring
    "RUF003", # ambiguous-unicode-character-comment
    "RUF012", # mutable-class-default
    # "F841",   # unused-variable
]
ignore-init-module-imports = true

[tool.ruff.isort]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
docstring-code-line-length = 120
skip-magic-trailing-comma = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = ["tests"]
